[
  {
    "name": "Container",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "description": "Un widget de conveniencia que combina widgets comunes de pintura, posicionamiento y tamaño.",
    "link": "https://docs.flutter.io/flutter/widgets/Container-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-container-1' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#f50057'/></marker><marker id='arrow-container-2' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#ffffff'/></marker><filter id='shadow-container' x='-50%' y='-50%' width='200%' height='200%'><feGaussianBlur stdDeviation='4'/></filter><linearGradient id='gradient-container' x1='0' y1='0.2' x2='0.4' y2='0.9'><stop offset='55%' stop-color='#ffffff'/><stop offset='100%' stop-color='#fdccdd'/></linearGradient></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='15' y='25' width='70' height='47.5' rx='10' ry='10' fill='#000000' filter='url(#shadow-container)'/><rect x='15' y='25' width='70' height='47.5' rx='10' ry='10' fill='url(#gradient-container)' stroke-width='5' stroke='#3b75ad'/><rect x='30' y='40' width='40' height='30' fill='#4dd0e1'/><line x1='20' y1='55' x2='27' y2='55' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-container-1)' marker-end='url(#arrow-container-1)'/><line x1='73' y1='55' x2='80' y2='55' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-container-1)' marker-end='url(#arrow-container-1)'/><line x1='50' y1='30' x2='50' y2='37' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-container-1)' marker-end='url(#arrow-container-1)'/><line x1='50' y1='78' x2='50' y2='82' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-container-1)' marker-end='url(#arrow-container-1)'/><line x1='16' y1='17.5' x2='85' y2='17.5' stroke='#ffffff' stroke-width='2' marker-start='url(#arrow-container-2)' marker-end='url(#arrow-container-2)'/><line x1='7.5' y1='26' x2='7.5' y2='72' stroke='#ffffff' stroke-width='2' marker-start='url(#arrow-container-2)' marker-end='url(#arrow-container-2)'/></svg>"
  },
  {
    "name": "Row",
    "description": "Diseñe una lista de widgets secundarios en la dirección horizontal.",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Row-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='30' width='80' height='40' fill='#ffffff'/><rect x='15' y='40' width='20' height='20' fill='#4dd0e1'/><rect x='40' y='35' width='30' height='30' fill='#4dd0e1'/></svg>"
  },
  {
    "name": "Column",
    "description": "Diseñe una lista de widgets secundarios en la dirección vertical.",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Column-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='30' y='10' width='40' height='80' fill='#ffffff'/><rect x='40' y='15' width='20' height='20' fill='#4dd0e1'/><rect x='35' y='40' width='30' height='30' fill='#4dd0e1'/></svg>"
  },
  {
    "name": "Image",
    "description": "Un widget que muestra una imagen.",
    "categories": [
      "Basics",
      "Assets, Images, and Icons"
    ],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Image-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='20' y='20' width='60' height='60' fill='#ffffff'/><image x='22.5' y='22.5' width='55' height='55' xlink:href='/images/owl.jpg'/></svg>"
  },
  {
    "name": "Text",
    "description": "Una línea de texto con un solo estilo.",
    "categories": [
      "Basics",
      "Text"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/widgets/Text-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='20' y='30' width='60' height='40' fill='#ffffff'/><text x='50' y='60' text-anchor='middle' font-family='Roboto' font-size='25' fill='#3b75ad'>Abc</text></svg>"
  },
  {
    "name": "Icon",
    "description": "Un ícono de Material Design.",
    "categories": [
      "Basics",
      "Assets, Images, and Icons"
    ],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Icon-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RaisedButton",
    "description": "Un botón elevado (RaisedButton) de Material Design. Un botón elevado consiste en una pieza rectangular de material que se desplaza sobre la interfaz.",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/RaisedButton-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VbDh6YmNiYVc3SHM/components_buttons_usage2.png'>"
  },
  {
    "name": "Scaffold",
    "sample": "Scaffold_index",
    "description": "Implementa la estructura de diseño visual básica de Material Design. Esta clase proporciona API para mostrar drawers, snack bars, y bottom sheets.",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/Scaffold-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0Bx4BSt6jniD7T0hfM01sSmRyTG8/layout_structure_regions_mobile.png'>"
  },
  {
    "name": "Appbar",
    "sample": "AppBar_index",
    "description": "Una barra de aplicaciones (Appbar) de Material Design. Una barra de aplicaciones consiste en una barra de herramientas y potencialmente otros widgets, como TabBar y FlexibleSpaceBar.",
    "categories": [
      "Basics"
    ],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/AppBar-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VclpfSFpuelBGR1k/components_toolbars.png'>"
  },
  {
    "name": "FlutterLogo",
    "description": "El logotipo de Flutter, en forma de widget. Este widget respeta IconTheme.",
    "categories": [
      "Basics"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/material/FlutterLogo-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Stack",
    "description": "Esta clase es útil si desea superponer varios children de una manera simple, por ejemplo, tener texto y una imagen, superpuestos con un degradado y un botón adjunto a la parte inferior.",
    "categories": [
      "Stack"
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Stack-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='10' width='80' height='80' fill='#ffffff'/><rect x='25' y='25' width='40' height='30' fill='#3b75ad'/><rect x='45' y='35' width='30' height='30' fill='#4dd0e1'/><rect x='40' y='50' width='10' height='10' fill='#f50057'/></svg>"
  },
  {
    "name": "Placeholder",
    "description": "Un widget que dibuja un recuadro que representa dónde se agregarán otros widgets algún día.",
    "categories": [
      "Basics"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/widgets/Placeholder-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "BottomNavigationBar",
    "description": "Las barras de navegación inferiores facilitan explorar y cambiar entre las vistas de nivel superior en un solo toque. El widget BottomNavigationBar implementa este componente.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/BottomNavigationBar-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VWG5nei0wWXpoczA/components_bottom_navigation.png'>"
  },
  {
    "name": "TabBar",
    "sample": "TabBar_index",
    "description": "Un widget de Material Design que muestra una fila horizontal de pestañas.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/TabBar-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VaWdBdnhMT3ViXzQ/components_tabs.png'>"
  },
  {
    "name": "TabBarView",
    "sample": "TabBarView_index",
    "description": "Una vista de página que muestra el widget que corresponde a la pestaña seleccionada actualmente. Normalmente se usa junto con un TabBar.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/TabBarView-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0B7WCemMG6e0VaWdBdnhMT3ViXzQ/components_tabs.png'>"
  },
  {
    "name": "MaterialApp",
    "description": "Un widget de conveniencia que envuelve una cantidad de widgets que comúnmente se requieren para las aplicaciones que implementan Material Design.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/MaterialApp-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0Bx4BSt6jniD7Y1huOXVQdlFPMmM/materialdesign_introduction.png'>"
  },
  {
    "name": "WidgetsApp",
    "description": "Una clase de conveniencia que envuelve una serie de widgets que comúnmente se requieren para una aplicación.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/WidgetsApp-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Drawer",
    "description": "Un panel de Material Design que se desliza horizontalmente desde el borde de un Scaffold para mostrar enlaces de navegación en una aplicación.",
    "categories": [],
    "subcategories": [
      "App structure and navigation"
    ],
    "link": "https://docs.flutter.io/flutter/material/Drawer-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0B7WCemMG6e0VaDhWUXJTTng4ZGs/patterns_navigation_drawer.png'>"
  },
  {
    "name": "FloatingActionButton",
    "description": "Un botón de acción flotante (FloatingActionButton) es un botón de icono circular que se desplaza sobre el contenido para promover una acción principal en la aplicación. Los botones de acción flotante se usan más comúnmente en el campo Scaffold.floatingActionButton.",
    "categories": [],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/FloatingActionButton-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VN20tOXJoUjVxQjg/components_buttons_fab.png'>"
  },
  {
    "name": "FlatButton",
    "description": "Un botón plano (FlatButton) es una sección impresa en un widget de Componentes de Material que reacciona a los toques llenando de color.",
    "categories": [],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/FlatButton-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VNDg3V3ZjU2hsNGc/components_buttons_usage3.png'>"
  },
  {
    "name": "IconButton",
    "sample": "IconButton_index",
    "description": "Un botón de icono es una imagen impresa en un widget Material que reacciona a los toques llenando con color (tinta).",
    "categories": [],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/IconButton-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0B_udO5B8pzrzdXVuTlBoOTBjcU0/components_buttons_other1.png'>"
  },
  {
    "name": "PopupMenuButton",
    "sample": "PopupMenuButton_index",
    "description": "Muestra un menú cuando se presiona y llama onSelected cuando se descarta el menú porque se seleccionó un elemento.",
    "categories": [],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/PopupMenuButton-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_11/assets/0B7WCemMG6e0VakJ6a0F2MFJaaDQ/components_menus.png'>"
  },
  {
    "name": "ButtonBar",
    "description": "Una disposición horizontal de botones.",
    "categories": [],
    "subcategories": [
      "Buttons"
    ],
    "link": "https://docs.flutter.io/flutter/material/ButtonBar-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "TextField",
    "description": "Tocar un campo de texto (TextField) coloca el cursor y muestra el teclado. El widget TextField implementa este componente.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/TextField-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VbURLNTM0N0R6eUE/components_text_fields.png'>"
  },
  {
    "name": "Checkbox",
    "description": "Las casillas de verificación (Checkbox) permiten al usuario seleccionar múltiples opciones de un conjunto. El widget Checkbox implementa este componente.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/Checkbox-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_9/0Bx4BSt6jniD7T2xGbGo0cUlPVG8/components_switches_check1.png'>"
  },
  {
    "name": "Radio",
    "description": "Los botones de radio permiten al usuario seleccionar una opción de un conjunto. Utilice los botones de opción para selección exclusiva si cree que el usuario necesita ver todas las opciones disponibles una al lado de la otra.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/Radio-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_9/0Bx4BSt6jniD7Z1NaaXh2ZkpDRkE/components_switches_radio1.png'>"
  },
  {
    "name": "Switch",
    "description": "Los interruptores de encendido/apagado alternan el estado de una opción de configuración única. El widget Switch implementa este componente.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/Switch-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_9/0Bx4BSt6jniD7NDg4aGIzVXYxVEE/components_switches_switch1.png'>"
  },
  {
    "name": "Slider",
    "description": "Sliders permiten que los usuarios seleccionen entre un rango de valores moviendo el control deslizante.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/Slider-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VTmJrQUYzajFIclE/components_sliders.png'>"
  },
  {
    "name": "Date & Time Pickers",
    "description": "Los selectores de fecha usan una ventana de diálogo para seleccionar una sola fecha en el móvil. Los seleccionadores de tiempo usan un diálogo para seleccionar una sola vez (en el formato horas: minutos) en el móvil.",
    "categories": [],
    "subcategories": [
      "Input and selections"
    ],
    "link": "https://docs.flutter.io/flutter/material/showDatePicker.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VY2h4WElGdEhPb2c/components_pickers.png'>"
  },
  {
    "name": "SimpleDialog",
    "description": "Los diálogos simples pueden proporcionar detalles o acciones adicionales sobre un elemento de la lista. Por ejemplo, pueden mostrar iconos de avatares que clarifican el subtexto u otras acciones ortogonales (como agregar una cuenta).",
    "categories": [],
    "subcategories": [
      "Dialogs, alerts, and panels"
    ],
    "link": "https://docs.flutter.io/flutter/material/SimpleDialog-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VVGNnN3NvMGdoQTg/components_dialogs.png'>"
  },
  {
    "name": "AlertDialog",
    "description": "Las alertas son interrupciones urgentes que requieren reconocimiento e informan al usuario sobre una situación. El widget AlertDialog implementa este componente.",
    "categories": [],
    "subcategories": [
      "Dialogs, alerts, and panels"
    ],
    "link": "https://docs.flutter.io/flutter/material/AlertDialog-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0Bzhp5Z4wHba3TzFHYVlrbWF2bnM/components_alerts_1.png'>"
  },
  {
    "name": "BottomSheet",
    "description": "Bottom sheets se deslizan hacia arriba desde la parte inferior de la pantalla para revelar más contenido. Puede llamar a showBottomSheet () para implementar una hoja inferior persistente o showModalBottomSheet () para implementar una hoja inferior modal.",
    "categories": [],
    "subcategories": [
      "Dialogs, alerts, and panels"
    ],
    "link": "https://docs.flutter.io/flutter/material/BottomSheet-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VVWZzZ1FIN09XWGc/components_bottom_sheets.png'>"
  },
  {
    "name": "ExpansionPanel",
    "description": "Los paneles de expansión contienen flujos de creación y permiten una edición ligera de un elemento. El widget ExpansionPanel implementa este componente.",
    "categories": [],
    "subcategories": [
      "Dialogs, alerts, and panels"
    ],
    "link": "https://docs.flutter.io/flutter/material/ExpansionPanel-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VOXF3eEJ3azZMSjg/components_expansion_panels.png'>"
  },
  {
    "name": "SnackBar",
    "description": "Un mensaje ligero con una acción opcional que se muestra brevemente en la parte inferior de la pantalla.",
    "categories": [],
    "subcategories": [
      "Dialogs, alerts, and panels"
    ],
    "link": "https://docs.flutter.io/flutter/material/SnackBar-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VSjZkendtc19iZ2M/components_snackbars.png'>"
  },
  {
    "name": "Chip",
    "description": "Un ficha (Chip) de Material Design. Las fichas representan entidades complejas en bloques pequeños, como un contacto.",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/material/Chip-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VM1VORGxxWUx5U0E/components_chips.png'>"
  },
  {
    "name": "Tooltip",
    "description": "La información sobre herramientas proporciona etiquetas de texto que ayudan a explicar la función de un botón u otra acción de la interfaz del usuario. Ajuste el botón en un widget Tooltip para mostrar una etiqueta cuando el widget se presiona por largo tiempo (o cuando el usuario realiza alguna otra acción apropiada).",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/material/Tooltip-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VZ1JKMzJFcmhOWkk/components_tooltips.png'>"
  },
  {
    "name": "DataTable",
    "description": "Las tablas de datos muestran conjuntos de datos sin formato. Suelen aparecer en productos empresariales de escritorio. El widget DataTable implementa este componente.",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/material/DataTable-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VWTJHMmJZdWZ5LU0/components_data_tables.png'>"
  },
  {
    "name": "Card",
    "description": "Una tarjeta de Material Design. Una carta tiene esquinas ligeramente redondeadas y una sombra.",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/material/Card-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VR0ptbC1RV1NLNlk/components_cards.png'>"
  },
  {
    "name": "LinearProgressIndicator",
    "description": "Los indicadores de progreso y actividad son indicaciones visuales de un contenido de carga de la aplicación. El widget LinearProgressIndicator implementa este componente. Además, también puede usar el widget CircularProgressIndicator.",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/material/LinearProgressIndicator-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VWkJiRjRLbzRNS3M/components_progress_and_activity.png'>"
  },
  {
    "name": "GridView",
    "description": "Una lista de cuadrículas consiste en un patrón repetido de celdas dispuestas en un diseño vertical y horizontal. El widget GridView implementa este componente. ",
    "categories": [],
    "subcategories": [
      "Information displays"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/GridView-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VandQYXpNMG9aQUk/components_grid_lists.png'>"
  },
  {
    "name": "ListTile",
    "description": "Una única fila de altura fija que generalmente contiene algo de texto y un ícono inicial o final.",
    "categories": [],
    "subcategories": [
      "Layout"
    ],
    "link": "https://docs.flutter.io/flutter/material/ListTile-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0Bx4BSt6jniD7UUw0bzVwU2lMUHc/components_lists_keylines_single10.png'>"
  },
  {
    "name": "Stepper",
    "description": "Un widget paso a paso de Material Design que muestra el progreso a través de una secuencia de pasos.",
    "categories": [],
    "subcategories": [
      "Layout"
    ],
    "link": "https://docs.flutter.io/flutter/material/Stepper-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VTndyUnNCR2tQREE/components_steppers.png'>"
  },
  {
    "name": "Divider",
    "description": "Una línea horizontal de un píxel lógico grueso, con relleno en cada lado.",
    "categories": [],
    "subcategories": [
      "Layout"
    ],
    "link": "https://docs.flutter.io/flutter/material/Divider-class.html",
    "image": "<img alt='' src='https://material-design.storage.googleapis.com/publish/material_v_9/0B7WCemMG6e0VUVlmbHM1Q013RU0/components_dividers.png'>"
  },
  {
    "name": "CupertinoActivityIndicator",
    "description": "Un indicador de actividad estilo iOS. Muestra un 'spinner' circular.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoActivityIndicator-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-activity-indicator.png'>"
  },
  {
    "name": "CupertinoAlertDialog",
    "description": "Un diálogo de alerta estilo iOS.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoAlertDialog-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoButton",
    "description": "Un botón estilo iOS.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoButton-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-button.png'>"
  },
  {
    "name": "CupertinoDialog",
    "description": "Un diálogo de estilo iOS.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoDialog-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-dialog.png'>"
  },
  {
    "name": "CupertinoDialogAction",
    "description": "Un botón típicamente usado en un CupertinoAlertDialog. ",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoDialogAction-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoSlider",
    "description": "Se usa para seleccionar de un rango de valores. ",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoSlider-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-slider.png'>"
  },
  {
    "name": "CupertinoSwitch",
    "description": "Un cambio de estilo iOS. Se usa para activar o desactivar el estado de una configuración única.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoSwitch-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-switch.png'>"
  },
  {
    "name": "CupertinoPicker",
    "description": "Un selector de estilo iOS. Se usa para seleccionar un elemento en una lista breve.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoPicker-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-picker.png'>"
  },
  {
    "name": "CupertinoPageTransition",
    "description": "Proporciona una animación de transición de página estilo iOS.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoPageTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoFullscreenDialogTransition",
    "description": "Una transición de estilo iOS utilizada para invocar diálogos de pantalla completa.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoFullscreenDialogTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoNavigationBar",
    "description": "Una barra de navegación superior estilo iOS. Normalmente se usa con CupertinoPageScaffold.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoNavigationBar-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-nav-bar.png'>"
  },
  {
    "name": "CupertinoTabBar",
    "description": "Una barra de pestañas inferior al estilo iOS. Normalmente se usa con CupertinoTabScaffold.",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoTabBar-class.html",
    "image": "<img alt='' src='/images/widget-catalog/cupertino-tab-bar.png'>"
  },
  {
    "name": "CupertinoPageScaffold",
    "description": "Estructura básica de diseño de página de estilo iOS. Posiciona una barra de navegación y contenido. ",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoPageScaffold-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoTabScaffold",
    "description": "Estructura de la aplicación de iOS con pestañas. Coloca una barra de pestañas en la parte superior de las pestañas de contenido. ",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoTabScaffold-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CupertinoTabView",
    "description": "El contenido de raíz de una pestaña que admita la navegación paralela entre pestañas. Normalmente se usa con CupertinoTabScaffold ",
    "categories": [
      "Cupertino (iOS-style widgets)"
    ],
    "subcategories": [],
    "link": "https://docs.flutter.io/flutter/cupertino/CupertinoTabView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Padding",
    "description": "Un widget que inserta a su hijo por el padding dado.",
    "categories": [
      "Styling"
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Padding-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-padding' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#f50057'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='20' width='80' height='60' fill='#ffffff'/><rect x='25' y='30' width='50' height='30' fill='#4dd0e1'/><line x1='13' y1='45' x2='22' y2='45' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-padding)' marker-end='url(#arrow-padding)'/><line x1='78' y1='45' x2='87' y2='45' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-padding)' marker-end='url(#arrow-padding)'/><line x1='50' y1='23' x2='50' y2='27' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-padding)' marker-end='url(#arrow-padding)'/><line x1='50' y1='63' x2='50' y2='77' stroke='#f50057' stroke-width='2' marker-start='url(#arrow-padding)' marker-end='url(#arrow-padding)'/></svg>"
  },
  {
    "name": "Center",
    "description": "Un widget que centra su hijo en sí mismo.",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Center-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-center' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#f50057'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='20' width='80' height='60' fill='#ffffff'/><rect x='25' y='35' width='50' height='30' fill='#4dd0e1'/><line x1='10' y1='50' x2='22' y2='50' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-center)'/><line x1='90' y1='50' x2='78' y2='50' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-center)'/><line x1='50' y1='20' x2='50' y2='32' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-center)'/><line x1='50' y1='80' x2='50' y2='68' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-center)'/></svg>"
  },
  {
    "name": "Align",
    "description": "Un widget que alinea a su hijo dentro de sí mismo y, opcionalmente, se dimensiona en función del tamaño del child.",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Align-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-align' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#f50057'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='20' width='80' height='60' fill='#ffffff'/><rect x='15' y='50' width='50' height='30' fill='#4dd0e1'/><line x1='10' y1='65' x2='12' y2='65' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-align)'/><line x1='90' y1='65' x2='68' y2='65' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-align)'/><line x1='40' y1='20' x2='40' y2='47' stroke='#f50057' stroke-width='2' marker-end='url(#arrow-align)'/></svg>"
  },
  {
    "name": "FittedBox",
    "description": "Escala y posiciona a su hijo dentro de sí mismo de acuerdo con el ajuste.",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FittedBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AspectRatio",
    "description": "Un widget que intenta dimensionar al hijo a una relación de aspecto específica. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AspectRatio-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-aspect-ratio' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#ffffff'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='25' y='35' width='50' height='30' fill='#ffffff'/><rect x='27.5' y='37.5' width='45' height='25' fill='#4dd0e1'/><line x1='31' y1='41' x2='69' y2='59' stroke='#ffffff' stroke-width='2' marker-start='url(#arrow-aspect-ratio)' marker-end='url(#arrow-aspect-ratio)'/></svg>"
  },
  {
    "name": "ConstrainedBox",
    "description": "Un widget que impone restricciones adicionales en su child. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ConstrainedBox-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-constrained-box' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#ffffff'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='20' y='30' width='50' height='40' fill='#ffffff'/><rect x='22.5' y='32.5' width='45' height='35' fill='#4dd0e1'/><path d='M63 23 v 40' stroke='#ffffff' stroke-width='1' stroke-linecap='round' stroke-dasharray='0.5 3.1' fill='transparent'/><path d='M77 23 v 54' stroke='#ffffff' stroke-width='1' stroke-linecap='round' stroke-dasharray='0.5 3.1' fill='transparent'/><path d='M13 63 h 50' stroke='#ffffff' stroke-width='1' stroke-linecap='round' stroke-dasharray='0.5 3.1' fill='transparent'/><path d='M13 77 h 64' stroke='#ffffff' stroke-width='1' stroke-linecap='round' stroke-dasharray='0.5 3.1' fill='transparent'/><path d='M50 25 L60 25' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-constrained-box)'/><path d='M90 25 L80 25' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-constrained-box)'/><path d='M15 50 L15 60' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-constrained-box)'/><path d='M15 90 L15 80' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-constrained-box)'/></svg>"
  },
  {
    "name": "Baseline",
    "description": "Un widget que posiciona a su hijo de acuerdo con la línea base del hijo. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Baseline-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-baseline' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#ffffff'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='20' y='20' width='60' height='50' fill='#ffffff'/><rect x='20' y='45' width='60' height='30' fill='#4dd0e1'/><line x1='85' y1='20' x2='85' y2='66' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-baseline)'/><line x1='15' y1='20' x2='15' y2='66' stroke='#ffffff' stroke-width='2' marker-end='url(#arrow-baseline)'/><line x1='10' y1='70' x2='90' y2='70' stroke='#ffffff' stroke-width='2'/><text x='50' y='69' text-anchor='middle' font-family='Roboto' font-size='25' fill='#3b75ad'>Abc </text></svg>"
  },
  {
    "name": "FractionallySizedBox",
    "description": "Un widget que dimensiona su hijo a una fracción del espacio total disponible. Para obtener más detalles sobre el algoritmo de diseño, consulte RenderFractionallySizedOverflowBox. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FractionallySizedBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "IntrinsicHeight",
    "description": "Un widget que dimensiona su hijo a la altura intrínseca del hijo. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/IntrinsicHeight-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "IntrinsicWidth",
    "description": "Un widget que dimensiona su hijo al ancho intrínseco del hijo. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/IntrinsicWidth-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "LimitedBox",
    "description": "Una caja que limita su tamaño solo cuando no está restringida. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/LimitedBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Offstage",
    "description": "Un widget que establece al hijo como si estuviera en el árbol, pero sin pintar nada, sin que el hijo esté disponible para la prueba de golpes, y sin dejar espacio en el padre. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Offstage-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "OverflowBox",
    "description": "Un widget que impone diferentes restricciones en su hijo de las que obtiene de su padre, permitiendo posiblemente que el hijo desborde al padre. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/OverflowBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "SizedBox",
    "description": "Una caja con un tamaño especificado. Si se le da un hijo, este widget fuerza a su hijo a tener un ancho y / o altura específicos (suponiendo que el padre de este widget permita los valores). Si el ancho o el alto es nulo, este artilugio se dimensionará a sí mismo para que coincida con el tamaño del niño en esa dimensión. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/SizedBox-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><marker id='arrow-sized-box' orient='auto-start-reverse' viewBox='0 0 1 1' markerWidth='3' markerHeight='3' refX='0.5' refY='0.5'><path d='M 1 0.5 L 0.5 0 L 0.5 1 z' fill='#ffffff'/></marker></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='25' y='35' width='50' height='30' fill='#ffffff'/><rect x='27.5' y='37.5' width='45' height='25' fill='#4dd0e1'/><line x1='28' y1='30' x2='72' y2='30' stroke='#ffffff' stroke-width='2' marker-start='url(#arrow-sized-box)' marker-end='url(#arrow-sized-box)'/><line x1='20' y1='38' x2='20' y2='62' stroke='#ffffff' stroke-width='2' marker-start='url(#arrow-sized-box)' marker-end='url(#arrow-sized-box)'/></svg>"
  },
  {
    "name": "SizedOverflowBox",
    "description": "Un widget que tiene un tamaño específico pero pasa sus restricciones originales a través de su hijo, que probablemente se desbordará. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/SizedOverflowBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Transform",
    "description": "Un widget que aplica una transformación antes de pintar a su hijo. ",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Transform-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='17.5' y='42.5' width='50' height='30' fill='#ffffff'/><rect x='20' y='45' width='45' height='25' fill='#3b75ad'/><rect x='20' y='45' width='45' height='25' fill='#4dd0e1' transform='translate(15 -5) rotate(-23) skewX(-10)'/></svg>"
  },
  {
    "name": "CustomSingleChildLayout",
    "description": "Un widget que difiere el diseño de su hijo único a un delegado.",
    "categories": [
    ],
    "subcategories": [
      "Single-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/CustomSingleChildLayout-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "IndexedStack",
    "description": "Una pila que muestra un solo hijo de una lista de hijos.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/IndexedStack-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "GridView",
    "description": "Una matriz 2D desplazable de widgets.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/GridView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Flow",
    "description": "Un widget que implementa el algoritmo de diseño de flujo.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Flow-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Table",
    "description": "Un widget que usa el algoritmo de diseño de tabla para sus hijos.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Table-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Wrap",
    "description": "Un widget que muestra sus hijos en múltiples ejecuciones horizontales o verticales.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Wrap-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ListBody",
    "description": "Un widget que ordena sus hijos secuencialmente a lo largo de un eje dado, forzándolos a la dimensión del elemento primario en el otro eje.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ListBody-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ListView",
    "sample": "ListView_index",
    "description": "Una lista desplazable y lineal de widgets. ListView es el widget de desplazamiento más comúnmente utilizado. Muestra sus hijos uno tras otro en la dirección de desplazamiento. En el eje transversal, los hijos deben completar ListView.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ListView-class.html",
    "image": "<svg viewBox='0 0 100 100'><filter id='inset-shadow-block' x='-50%' y='-50%' width='200%' height='200%'><feComponentTransfer in='SourceAlpha'><feFuncA type='table' tableValues='1 0' /></feComponentTransfer><feGaussianBlur stdDeviation='2' result='Blur'/><feFlood flood-color='#666666' result='color'/><feComposite in2='Blur' operator='in'/><feComposite in2='SourceAlpha' operator='in' /><feMerge><feMergeNode /></feMerge></filter><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='30' y='10' width='40' height='80' fill='#ffffff'/><rect x='35' y='10' width='30' height='15' fill='#4dd0e1'/><rect x='35' y='30' width='30' height='20' fill='#4dd0e1'/><rect x='35' y='55' width='30' height='5' fill='#4dd0e1'/><rect x='35' y='65' width='30' height='15' fill='#4dd0e1'/><rect x='35' y='85' width='30' height='5' fill='#4dd0e1'/><rect x='30' y='10' width='40' height='80' fill='#ffffff' filter='url(#inset-shadow-block)'/></svg>"
  },
  {
    "name": "CustomMultiChildLayout",
    "description": "Un widget que utiliza un delegado para dimensionar y ubicar varios hijos.",
    "categories": [
    ],
    "subcategories": [
      "Multi-child layout widgets"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/CustomMultiChildLayout-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "LayoutBuilder",
    "description": "Crea un árbol de widgets que puede depender del tamaño del widget principal.",
    "categories": [
    ],
    "subcategories": [
      "Layout helpers"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/LayoutBuilder-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RichText",
    "description": "El widget RichText muestra texto que usa múltiples estilos diferentes. El texto para mostrar se describe utilizando un árbol de objetos TextSpan, cada uno de los cuales tiene un estilo asociado que se utiliza para ese subárbol. El texto puede dividirse en varias líneas o puede que se muestren todos en la misma línea, según las restricciones de diseño.",
    "categories": [
      "Text"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/RichText-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "DefaultTextStyle",
    "description": "El estilo de texto para aplicar a widgets de texto descendientes sin estilo explícito.",
    "categories": [
      "Text"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/DefaultTextStyle-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RawImage",
    "description": "Un widget que muestra una dart:ui.Image directamente.",
    "categories": [
      "Assets, Images, and Icons"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/RawImage-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AssetBundle",
    "description": "Los paquetes de activos contienen recursos, como imágenes y cadenas, que pueden ser utilizados por una aplicación. El acceso a estos recursos es asincrónico, por lo que se pueden cargar de forma transparente a través de una red (por ejemplo, desde un NetworkAssetBundle) o desde el sistema de archivos local sin bloquear la interfaz de usuario de la aplicación.",
    "categories": [
      "Assets, Images, and Icons"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/services/AssetBundle-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Form",
    "description": "Un contenedor opcional para agrupar varios widgets de campo de formulario (por ejemplo, widgets TextField).",
    "categories": [
      "Input"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Form-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "FormField",
    "description": "Un solo campo de formulario. Este widget mantiene el estado actual del campo de formulario, por lo que las actualizaciones y los errores de validación se reflejan visualmente en la interfaz de usuario.",
    "categories": [
      "Input"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FormField-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RawKeyboardListener",
    "description": "A widget that calls a callback whenever the user presses or releases a key on a keyboard.",
    "categories": [
      "Input"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/RawKeyboardListener-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedContainer",
    "description": "A container that gradually changes its values over a period of time.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedContainer-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedCrossFade",
    "description": "A widget that cross-fades between two given children and animates itself between their sizes.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedCrossFade-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Hero",
    "description": "A widget that marks its child as being a candidate for hero animations.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
      "Routing"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Hero-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedBuilder",
    "description": "A general-purpose widget for building animations. AnimatedBuilder is useful for more complex widgets that wish to include an animation as part of a larger build function. To use AnimatedBuilder, simply construct the widget and pass it a builder function.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedBuilder-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Draggable",
    "description": "A widget that can be dragged from to a DragTarget. When a draggable widget recognizes the start of a drag gesture, it displays a feedback widget that tracks the user's finger across the screen. If the user lifts their finger while on top of a DragTarget, that target is given the opportunity to accept the data carried by the draggable.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Draggable-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "LongPressDraggable",
    "description": "Makes its child draggable starting from long press.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/LongPressDraggable-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "GestureDetector",
    "description": "A widget that detects gestures. Attempts to recognize gestures that correspond to its non-null callbacks. If this widget has a child, it defers to that child for its sizing behavior. If it does not have a child, it grows to fit the parent instead.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/GestureDetector-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "DragTarget",
    "description": "A widget that receives data when a Draggable widget is dropped. When a draggable is dragged on top of a drag target, the drag target is asked whether it will accept the data the draggable is carrying. If the user does drop the draggable on top of the drag target (and the drag target has indicated that it will accept the draggable's data), then the drag target is asked to accept the draggable's data.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/DragTarget-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Dismissible",
    "description": "A widget that can be dismissed by dragging in the indicated direction. Dragging or flinging this widget in the DismissDirection causes the child to slide out of view. Following the slide animation, if resizeDuration is non-null, the Dismissible widget animates its height (or width, whichever is perpendicular to the dismiss direction) to zero over the resizeDuration.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Dismissible-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "IgnorePointer",
    "description": "A widget that is invisible during hit testing. When ignoring is true, this widget (and its subtree) is invisible to hit testing. It still consumes space during layout and paints its child as usual. It just cannot be the target of located events, because it returns false from RenderBox.hitTest.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/IgnorePointer-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AbsorbPointer",
    "description": "A widget that absorbs pointers during hit testing. When absorbing is true, this widget prevents its subtree from receiving pointer events by terminating hit testing at itself. It still consumes space during layout and paints its child as usual. It just prevents its children from being the target of located events, because it returns true from RenderBox.hitTest.",
    "categories": [
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AbsorbPointer-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Navigator",
    "description": "A widget that manages a set of child widgets with a stack discipline. Many apps have a navigator near the top of their widget hierarchy in order to display their logical history using an Overlay with the most recently visited pages visually on top of the older pages. Using this pattern lets the navigator visually transition from one page to another by moving the widgets around in the overlay. Similarly, the navigator can be used to show a dialog by positioning the dialog widget above the current page.",
    "categories": [
    ],
    "subcategories": [
      "Routing"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Navigator-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Theme",
    "description": "Applies a theme to descendant widgets. A theme describes the colors and typographic choices of an application.",
    "categories": [
      "Styling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/material/Theme-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "MediaQuery",
    "description": "Establishes a subtree in which media queries resolve to the given data.",
    "categories": [
      "Styling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/MediaQuery-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ListView",
    "description": "A scrollable, linear list of widgets. ListView is the most commonly used scrolling widget. It displays its children one after another in the scroll direction. In the cross axis, the children are required to fill the ListView.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ListView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "NestedScrollView",
    "description": "",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/NestedScrollView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "GridView",
    "description": "A scrollable, 2D array of widgets. The most commonly used grid layouts are GridView.count, which creates a layout with a fixed number of tiles in the cross axis, and GridView.extent, which creates a layout with tiles that have a maximum cross-axis extent. A custom SliverGridDelegate can produce an aribtrary 2D arrangement of children, including arrangements that are unaligned or overlapping.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/GridView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "SingleChildScrollView",
    "description": "A box in which a single widget can be scrolled. This widget is useful when you have a single box that will normally be entirely visible, for example a clock face in a time picker, but you need to make sure it can be scrolled if the container gets too small in one axis (the scroll direction).",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/SingleChildScrollView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Scrollable",
    "description": "Scrollable implements the interaction model for a scrollable widget, including gesture recognition, but does not have an opinion about how the viewport, which actually displays the children, is constructed.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
      "Touch interactions"
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Scrollable-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Scrollbar",
    "description": "A Material Design scrollbar. A scrollbar indicates which portion of a Scrollable widget is actually visible.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/material/Scrollbar-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "CustomScrollView",
    "description": "A ScrollView that creates custom scroll effects using slivers.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/CustomScrollView-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "NotificationListener",
    "description": "A widget that listens for Notifications bubbling up the tree.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/NotificationListener-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ScrollConfiguration",
    "description": "Controls how Scrollable widgets behave in a subtree.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ScrollConfiguration-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RefreshIndicator",
    "description": "A Material Design pull-to-refresh wrapper for scrollables.",
    "categories": [
      "Scrolling"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/material/RefreshIndicator-class.html",
    "image": "<img alt='' src='https://storage.googleapis.com/material-design/publish/material_v_12/assets/0B7WCemMG6e0VS2kzSmZwNnNKQVk/patterns-swipe-to-refresh.png'>"
  },
  {
    "name": "Opacity",
    "description": "A widget that makes its child partially transparent.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Opacity-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='10' y='10' width='60' height='60' fill='#3b75ad'/><rect x='20' y='30' width='70' height='50' fill='#ffffff' opacity='0.8'/></svg>"
  },
  {
    "name": "Transform",
    "description": "A widget that applies a transformation before painting its child.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Transform-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "DecoratedBox",
    "description": "A widget that paints a Decoration either before or after its child paints.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/DecoratedBox-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><filter id='shadow-decorated-box' x='-50%' y='-50%' width='200%' height='200%'><feGaussianBlur stdDeviation='4'/></filter><linearGradient id='gradient-decorated-box' x1='0' y1='0' x2='0.5' y2='1'><stop offset='50%' stop-color='#ffffff'/><stop offset='100%' stop-color='#f50057'/></linearGradient></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='25' y='25' width='50' height='50' rx='10' ry='10' fill='#000000' filter='url(#shadow-decorated-box)'/><rect x='25' y='25' width='50' height='50' rx='10' ry='10' fill='url(#gradient-decorated-box)' stroke-width='5' stroke='#4dd0e1'/></svg>"
  },
  {
    "name": "FractionalTranslation",
    "description": "A widget that applies a translation expressed as a fraction of the box's size before painting its child.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FractionalTranslation-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RotatedBox",
    "description": "A widget that rotates its child by a integral number of quarter turns.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/RotatedBox-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ClipOval",
    "description": "A widget that clips its child using an oval.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ClipOval-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><clipPath id='clip-oval'><circle cx='40' cy='50' r='30'/></clipPath></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='30' y='10' width='60' height='50' fill='#4dd0e1' opacity='0.05'/><circle cx='40' cy='50' r='30' fill='#ffffff'/><rect x='30' y='10' width='60' height='50' fill='#4dd0e1' clip-path='url(#clip-oval)'/></svg>"
  },
  {
    "name": "ClipPath",
    "description": "A widget that clips its child using a path.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ClipPath-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ClipRect",
    "description": "A widget that clips its child using a rectangle.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ClipRect-class.html",
    "image": "<svg viewBox='0 0 100 100'><defs><clipPath id='clip-rect'><rect x='10' y='20' width='60' height='60'/></clipPath></defs><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='30' y='10' width='60' height='50' fill='#4dd0e1' opacity='0.05'/><rect x='10' y='20' width='60' height='60' fill='#ffffff'/><rect x='30' y='10' width='60' height='50' fill='#4dd0e1' clip-path='url(#clip-rect)'/></svg>"
  },
  {
    "name": "CustomPaint",
    "description": "A widget that provides a canvas on which to draw during the paint phase.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/CustomPaint-class.html",
    "image": "<svg viewBox='0 0 100 100'><rect x='0' y='0' width='100' height='100' fill='#3949ab'/><rect x='20' y='20' width='60' height='60' fill='#ffffff'/><ellipse cx='40' cy='35' rx='10' ry='10' stroke-width='5' stroke='#4dd0e1' fill='transparent'/><ellipse cx='20' cy='71' rx='15' ry='20' stroke-width='5' stroke='#4dd0e1' fill='transparent' transform='rotate(-25)'/></svg>"
  },
  {
    "name": "BackdropFilter",
    "description": "A widget that applies a filter to the existing painted content and then paints child. This effect is relatively expensive, especially if the filter is non-local, such as a blur.",
    "categories": [
      "Painting and effects"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/BackdropFilter-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "Semantics",
    "description": "A widget that annotates the widget tree with a description of the meaning of the widgets. Used by accessibility tools, search engines, and other semantic analysis software to determine the meaning of the application.",
    "categories": [
      "Accessibility"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/Semantics-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "MergeSemantics",
    "description": "A widget that merges the semantics of its descendants.",
    "categories": [
      "Accessibility"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/MergeSemantics-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ExcludeSemantics",
    "description": "A widget that drops all the semantics of its descendants. This can be used to hide subwidgets that would otherwise be reported but that would only be confusing. For example, the Material Components Chip widget hides the avatar since it is redundant with the chip label.",
    "categories": [
      "Accessibility"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ExcludeSemantics-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "FutureBuilder",
    "description": "Widget that builds itself based on the latest snapshot of interaction with a Future.",
    "categories": [
      "Async"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FutureBuilder-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "StreamBuilder",
    "description": "Widget that builds itself based on the latest snapshot of interaction with a Stream.",
    "categories": [
      "Async"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/StreamBuilder-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "DecoratedBoxTransition",
    "description": "Animated version of a DecoratedBox that animates the different properties of its Decoration.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/DecoratedBoxTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "FadeTransition",
    "description": "Animates the opacity of a widget.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/FadeTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "PositionedTransition",
    "description": "Animated version of Positioned which takes a specific Animation to transition the child's position from a start position to and end position over the lifetime of the animation.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/PositionedTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "RotationTransition",
    "description": "Animates the rotation of a widget.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/RotationTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "ScaleTransition",
    "description": "Animates the scale of transformed widget.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/ScaleTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "SizeTransition",
    "description": "Animates its own size and clips and aligns the child.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/SizeTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "SlideTransition",
    "description": "Animates the position of a widget relative to its normal position.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/SlideTransition-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedDefaultTextStyle",
    "description": "Animated version of DefaultTextStyle which automatically transitions the default text style (the text style to apply to descendant Text widgets without explicit style) over a given duration whenever the given style changes.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedDefaultTextStyle-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedListState",
    "sample": "AnimatedListState_index",
    "description": "The state for a scrolling container that animates items when they are inserted or removed.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedListState-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedModalBarrier",
    "description": "A widget that prevents the user from interacting with widgets behind itself.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedModalBarrier-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedOpacity",
    "description": "Animated version of Opacity which automatically transitions the child's opacity over a given duration whenever the given opacity changes.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedOpacity-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedPhysicalModel",
    "description": "Animated version of PhysicalModel.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedPhysicalModel-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedPositioned",
    "description": "Animated version of Positioned which automatically transitions the child's position over a given duration whenever the given position changes.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedPositioned-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedSize",
    "description": "Animated widget that automatically transitions its size over a given duration whenever the given child's size changes.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedSize-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedWidget",
    "description": "A widget that rebuilds when the given Listenable changes value.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedWidget-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  },
  {
    "name": "AnimatedWidgetBaseState",
    "description": "A base class for widgets with implicit animations.",
    "categories": [
      "Animation and Motion"
    ],
    "subcategories": [
    ],
    "link": "https://docs.flutter.io/flutter/widgets/AnimatedWidgetBaseState-class.html",
    "image": "<img alt='' src='/images/catalog-widget-placeholder.png'>"
  }
]
